"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventoEntity = void 0;
class EventoEntity {
    constructor(nombre, descripcion, lugar, ciudad, fecha, hora, categoria, capacidad, valor, ubicacion, estado, visible, creado, actualizado, eliminado, id) {
        this.id = id;
        this.nombre = nombre;
        this.descripcion = descripcion;
        this.lugar = lugar;
        this.ciudad = ciudad;
        this.fecha = fecha;
        this.hora = hora;
        this.categoria = categoria;
        this.capacidad = capacidad;
        this.valor = valor;
        this.ubicacion = ubicacion;
        this.estado = estado;
        this.visible = visible;
        this.creado = creado;
        this.actualizado = actualizado;
        this.eliminado = eliminado;
    }
    static create(nombre, descripcion, lugar, ciudad, fecha, hora, categoria, capacidad, valor, ubicacion, estado, visible, creado, actualizado, eliminado, id) {
        return new EventoEntity(nombre, descripcion, lugar, ciudad, fecha, hora, categoria, capacidad, valor, ubicacion, estado, visible, creado, actualizado, eliminado, id);
    }
    static fromJson(json) {
        return new EventoEntity(json.nombre, json.descripcion, json.lugar, json.ciudad, json.fecha, json.hora, json.categoria, json.capacidad, json.valor, json.ubicacion, json.estado, json.visible, json.creado, json.actualizado, json.eliminado, json.id);
    }
}
exports.EventoEntity = EventoEntity;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRvRW50aXR5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2RvbWFpbi9lbnRpdGllcy9FdmVudG9FbnRpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBYSxZQUFZO0lBa0JyQixZQUNJLE1BQWMsRUFDZCxXQUFtQixFQUNuQixLQUFhLEVBQ2IsTUFBYyxFQUNkLEtBQVcsRUFDWCxJQUFZLEVBQ1osU0FBZSxFQUNmLFNBQWtCLEVBQ2xCLEtBQWMsRUFDZCxTQUFvQixFQUNwQixNQUFlLEVBQ2YsT0FBaUIsRUFDakIsTUFBYSxFQUNiLFdBQWtCLEVBQ2xCLFNBQWdCLEVBQ2hCLEVBQVc7UUFFWCxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQy9CLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUNULE1BQWMsRUFDZCxXQUFtQixFQUNuQixLQUFhLEVBQ2IsTUFBYyxFQUNkLEtBQVcsRUFDWCxJQUFZLEVBQ1osU0FBZSxFQUNmLFNBQWtCLEVBQ2xCLEtBQWMsRUFDZCxTQUFvQixFQUNwQixNQUFlLEVBQ2YsT0FBaUIsRUFDakIsTUFBYSxFQUNiLFdBQWtCLEVBQ2xCLFNBQWdCLEVBQ2hCLEVBQVc7UUFFWCxPQUFPLElBQUksWUFBWSxDQUNuQixNQUFNLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQzFELFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUNuRixDQUFDO0lBQ04sQ0FBQztJQUNELE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBUztRQUNyQixPQUFPLElBQUksWUFBWSxDQUNuQixJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksRUFDN0UsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQ3JGLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxFQUFFLENBQ3pELENBQUM7SUFDTixDQUFDO0NBQ0o7QUFwRkQsb0NBb0ZDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEV2ZW50b0VudGl0eSB7XG4gICAgaWQ/OiBudW1iZXI7XG4gICAgbm9tYnJlOiBzdHJpbmc7XG4gICAgZGVzY3JpcGNpb246IHN0cmluZzsgLy8gT3BjaW9uYWxcbiAgICBsdWdhcjogc3RyaW5nOyAvLyBPcGNpb25hbFxuICAgIGNpdWRhZDogc3RyaW5nOyAvLyBPcGNpb25hbFxuICAgIGZlY2hhOiBEYXRlOyAvLyBPcGNpb25hbFxuICAgIGhvcmE6IHN0cmluZzsgLy8gT3BjaW9uYWwgKGFzdW1pZW5kbyBxdWUgJ3RpbWUnIHNlIGFsbWFjZW5hIGNvbW8gc3RyaW5nKVxuICAgIGNhdGVnb3JpYT86IGFueTsgLy8gT3BjaW9uYWwgKGFqdXN0YSBlbCB0aXBvIHNlZ8O6biBjw7NtbyB1c2VzICdqc29uYicpXG4gICAgY2FwYWNpZGFkPzogbnVtYmVyOyAvLyBPcGNpb25hbFxuICAgIHZhbG9yPzogbnVtYmVyOyAvLyBPcGNpb25hbFxuICAgIHViaWNhY2lvbj86IG51bWJlcltdOyAvLyBPcGNpb25hbCAoYXN1bWllbmRvICdwb2ludCcpXG4gICAgZXN0YWRvPzogc3RyaW5nOyAvLyBPcGNpb25hbFxuICAgIHZpc2libGU/OiBib29sZWFuOyAvLyBPcGNpb25hbFxuICAgIGNyZWFkbz86IERhdGU7IC8vIE9wY2lvbmFsXG4gICAgYWN0dWFsaXphZG8/OiBEYXRlOyAvLyBPcGNpb25hbFxuICAgIGVsaW1pbmFkbz86IERhdGU7IC8vIE9wY2lvbmFsXG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgbm9tYnJlOiBzdHJpbmcsXG4gICAgICAgIGRlc2NyaXBjaW9uOiBzdHJpbmcsXG4gICAgICAgIGx1Z2FyOiBzdHJpbmcsXG4gICAgICAgIGNpdWRhZDogc3RyaW5nLFxuICAgICAgICBmZWNoYTogRGF0ZSxcbiAgICAgICAgaG9yYTogc3RyaW5nLFxuICAgICAgICBjYXRlZ29yaWE/OiBhbnksXG4gICAgICAgIGNhcGFjaWRhZD86IG51bWJlcixcbiAgICAgICAgdmFsb3I/OiBudW1iZXIsXG4gICAgICAgIHViaWNhY2lvbj86IG51bWJlcltdLFxuICAgICAgICBlc3RhZG8/OiBzdHJpbmcsXG4gICAgICAgIHZpc2libGU/OiBib29sZWFuLFxuICAgICAgICBjcmVhZG8/OiBEYXRlLFxuICAgICAgICBhY3R1YWxpemFkbz86IERhdGUsXG4gICAgICAgIGVsaW1pbmFkbz86IERhdGUsXG4gICAgICAgIGlkPzogbnVtYmVyLFxuICAgICkge1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMubm9tYnJlID0gbm9tYnJlO1xuICAgICAgICB0aGlzLmRlc2NyaXBjaW9uID0gZGVzY3JpcGNpb247XG4gICAgICAgIHRoaXMubHVnYXIgPSBsdWdhcjtcbiAgICAgICAgdGhpcy5jaXVkYWQgPSBjaXVkYWQ7XG4gICAgICAgIHRoaXMuZmVjaGEgPSBmZWNoYTtcbiAgICAgICAgdGhpcy5ob3JhID0gaG9yYTtcbiAgICAgICAgdGhpcy5jYXRlZ29yaWEgPSBjYXRlZ29yaWE7XG4gICAgICAgIHRoaXMuY2FwYWNpZGFkID0gY2FwYWNpZGFkO1xuICAgICAgICB0aGlzLnZhbG9yID0gdmFsb3I7XG4gICAgICAgIHRoaXMudWJpY2FjaW9uID0gdWJpY2FjaW9uO1xuICAgICAgICB0aGlzLmVzdGFkbyA9IGVzdGFkbztcbiAgICAgICAgdGhpcy52aXNpYmxlID0gdmlzaWJsZTtcbiAgICAgICAgdGhpcy5jcmVhZG8gPSBjcmVhZG87XG4gICAgICAgIHRoaXMuYWN0dWFsaXphZG8gPSBhY3R1YWxpemFkbztcbiAgICAgICAgdGhpcy5lbGltaW5hZG8gPSBlbGltaW5hZG87XG4gICAgfVxuXG4gICAgc3RhdGljIGNyZWF0ZShcbiAgICAgICAgbm9tYnJlOiBzdHJpbmcsXG4gICAgICAgIGRlc2NyaXBjaW9uOiBzdHJpbmcsXG4gICAgICAgIGx1Z2FyOiBzdHJpbmcsXG4gICAgICAgIGNpdWRhZDogc3RyaW5nLFxuICAgICAgICBmZWNoYTogRGF0ZSxcbiAgICAgICAgaG9yYTogc3RyaW5nLFxuICAgICAgICBjYXRlZ29yaWE/OiBhbnksXG4gICAgICAgIGNhcGFjaWRhZD86IG51bWJlcixcbiAgICAgICAgdmFsb3I/OiBudW1iZXIsXG4gICAgICAgIHViaWNhY2lvbj86IG51bWJlcltdLFxuICAgICAgICBlc3RhZG8/OiBzdHJpbmcsXG4gICAgICAgIHZpc2libGU/OiBib29sZWFuLFxuICAgICAgICBjcmVhZG8/OiBEYXRlLFxuICAgICAgICBhY3R1YWxpemFkbz86IERhdGUsXG4gICAgICAgIGVsaW1pbmFkbz86IERhdGUsXG4gICAgICAgIGlkPzogbnVtYmVyLFxuICAgICk6IEV2ZW50b0VudGl0eSB7XG4gICAgICAgIHJldHVybiBuZXcgRXZlbnRvRW50aXR5KFxuICAgICAgICAgICAgbm9tYnJlLCBkZXNjcmlwY2lvbiwgbHVnYXIsIGNpdWRhZCwgZmVjaGEsIGhvcmEsIGNhdGVnb3JpYSxcbiAgICAgICAgICAgIGNhcGFjaWRhZCwgdmFsb3IsIHViaWNhY2lvbiwgZXN0YWRvLCB2aXNpYmxlLCBjcmVhZG8sIGFjdHVhbGl6YWRvLCBlbGltaW5hZG8sIGlkXG4gICAgICAgICk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSnNvbihqc29uOiBhbnkpOiBFdmVudG9FbnRpdHkge1xuICAgICAgICByZXR1cm4gbmV3IEV2ZW50b0VudGl0eShcbiAgICAgICAgICAgIGpzb24ubm9tYnJlLCBqc29uLmRlc2NyaXBjaW9uLCBqc29uLmx1Z2FyLCBqc29uLmNpdWRhZCwganNvbi5mZWNoYSwganNvbi5ob3JhLFxuICAgICAgICAgICAganNvbi5jYXRlZ29yaWEsIGpzb24uY2FwYWNpZGFkLCBqc29uLnZhbG9yLCBqc29uLnViaWNhY2lvbiwganNvbi5lc3RhZG8sIGpzb24udmlzaWJsZSxcbiAgICAgICAgICAgIGpzb24uY3JlYWRvLCBqc29uLmFjdHVhbGl6YWRvLCBqc29uLmVsaW1pbmFkbywganNvbi5pZFxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==