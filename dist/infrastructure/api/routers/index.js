"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.initRoutes = void 0;
const EventoRouter_1 = require("./EventoRouter");
const swagger_1 = require("@infrastructure/api/swagger");
const AsistenteRouter_1 = require("@infrastructure/api/routers/AsistenteRouter");
const ReservaRouter_1 = require("@infrastructure/api/routers/ReservaRouter");
const AutenticacionRouter_1 = require("@infrastructure/api/routers/AutenticacionRouter");
const initRoutes = async (application) => {
    const pathEvento = '/evento';
    application.get(`${pathEvento}/:id`, { schema: swagger_1.eventoGetSchema }, EventoRouter_1.eventoGet);
    application.post(`${pathEvento}`, { schema: swagger_1.createEventoSchema }, EventoRouter_1.eventoPost);
    application.patch(`${pathEvento}`, { schema: swagger_1.pathEventoSchema }, EventoRouter_1.eventoPatch);
    application.delete(`${pathEvento}/:id`, { schema: swagger_1.deleteEventoSchema }, EventoRouter_1.eventoDelete);
    application.get(`${pathEvento}/lugares`, { schema: swagger_1.eventoLugaresGetSchema }, EventoRouter_1.eventoLugarCercano);
    application.get(`${pathEvento}/cerca`, { schema: swagger_1.eventoCercanosGetSchema }, EventoRouter_1.eventoCercano);
    application.get(`${pathEvento}/:id/asistentes`, { schema: swagger_1.eventoAsistetesGetSchema }, EventoRouter_1.totalAsistentes);
    application.post(`${pathEvento}/subir`, { schema: swagger_1.uploadExcelSchema }, EventoRouter_1.subirEvento);
    application.get(`${pathEvento}/status/:jobId`, { schema: swagger_1.getProcessStatusSchema }, EventoRouter_1.estadoSubirEvento);
    const pathAsistente = '/asistente';
    application.get(`${pathAsistente}/:identificacion`, { schema: swagger_1.getAsistentePorIdentificacionSchema }, AsistenteRouter_1.asistenteGet);
    application.post(`${pathAsistente}`, { schema: swagger_1.createAsistenteSchema }, AsistenteRouter_1.asistentePost);
    application.patch(`${pathAsistente}`, { schema: swagger_1.updateAsistenteSchema }, AsistenteRouter_1.asistentePatch);
    application.delete(`${pathAsistente}/:identificacion`, { schema: swagger_1.deleteAsistenteSchema }, AsistenteRouter_1.asistenteDelete);
    const pathReserva = '/reserva';
    application.get(`${pathReserva}/:id`, { schema: swagger_1.getReservaSchema }, ReservaRouter_1.reservaGet);
    application.post(`${pathReserva}`, { schema: swagger_1.createReservaSchema }, ReservaRouter_1.reservaPost);
    application.patch(`${pathReserva}`, { schema: swagger_1.updateReservaSchema }, ReservaRouter_1.reservaPatch);
    application.delete(`${pathReserva}/:id`, { schema: swagger_1.deleteReservaSchema }, ReservaRouter_1.reservaDelete);
    const pathAutenticacion = '/autenticar';
    application.post(`${pathAutenticacion}`, { schema: swagger_1.autenticacionSchema }, AutenticacionRouter_1.autenticar);
};
exports.initRoutes = initRoutes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvaW5mcmFzdHJ1Y3R1cmUvYXBpL3JvdXRlcnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaURBUXdCO0FBRXhCLHlEQW1CcUM7QUFDckMsaUZBS3FEO0FBQ3JELDZFQUErRztBQUMvRyx5RkFBMkU7QUFFcEUsTUFBTSxVQUFVLEdBQUcsS0FBSyxFQUFFLFdBQTRCLEVBQWlCLEVBQUU7SUFDNUUsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDO0lBQzdCLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxVQUFVLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSx5QkFBZSxFQUFFLEVBQUUsd0JBQVMsQ0FBQyxDQUFDO0lBQzdFLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxVQUFVLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSw0QkFBa0IsRUFBRSxFQUFFLHlCQUFVLENBQUMsQ0FBQztJQUM5RSxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsVUFBVSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsMEJBQWdCLEVBQUUsRUFBRSwwQkFBVyxDQUFDLENBQUM7SUFDOUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxHQUFHLFVBQVUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLDRCQUFrQixFQUFFLEVBQUUsMkJBQVksQ0FBQyxDQUFDO0lBQ3RGLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxVQUFVLFVBQVUsRUFBRSxFQUFFLE1BQU0sRUFBRSxnQ0FBc0IsRUFBRSxFQUFFLGlDQUFrQixDQUFDLENBQUM7SUFDakcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFVBQVUsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLGlDQUF1QixFQUFFLEVBQUUsNEJBQWEsQ0FBQyxDQUFDO0lBQzNGLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxVQUFVLGlCQUFpQixFQUFFLEVBQUUsTUFBTSxFQUFFLGtDQUF3QixFQUFFLEVBQUUsOEJBQWUsQ0FBQyxDQUFDO0lBQ3ZHLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxVQUFVLFFBQVEsRUFBRSxFQUFFLE1BQU0sRUFBRSwyQkFBaUIsRUFBRSxFQUFDLDBCQUFXLENBQUMsQ0FBQztJQUNuRixXQUFXLENBQUMsR0FBRyxDQUFDLEdBQUcsVUFBVSxnQkFBZ0IsRUFBRSxFQUFDLE1BQU0sRUFBRSxnQ0FBc0IsRUFBQyxFQUFFLGdDQUFpQixDQUFDLENBQUM7SUFHcEcsTUFBTSxhQUFhLEdBQUcsWUFBWSxDQUFDO0lBRW5DLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxhQUFhLGtCQUFrQixFQUFFLEVBQUUsTUFBTSxFQUFFLDZDQUFtQyxFQUFFLEVBQUUsOEJBQVksQ0FBQyxDQUFDO0lBQ25ILFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxhQUFhLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSwrQkFBcUIsRUFBRSxFQUFFLCtCQUFhLENBQUMsQ0FBQztJQUN2RixXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsYUFBYSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsK0JBQXFCLEVBQUUsRUFBRSxnQ0FBYyxDQUFDLENBQUM7SUFDekYsV0FBVyxDQUFDLE1BQU0sQ0FBQyxHQUFHLGFBQWEsa0JBQWtCLEVBQUUsRUFBRSxNQUFNLEVBQUUsK0JBQXFCLEVBQUUsRUFBRSxpQ0FBZSxDQUFDLENBQUM7SUFFM0csTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDO0lBRS9CLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxXQUFXLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSwwQkFBZ0IsRUFBRSxFQUFFLDBCQUFVLENBQUMsQ0FBQztJQUNoRixXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsV0FBVyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsNkJBQW1CLEVBQUUsRUFBRSwyQkFBVyxDQUFDLENBQUM7SUFDakYsV0FBVyxDQUFDLEtBQUssQ0FBQyxHQUFHLFdBQVcsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLDZCQUFtQixFQUFFLEVBQUUsNEJBQVksQ0FBQyxDQUFDO0lBQ25GLFdBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxXQUFXLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSw2QkFBbUIsRUFBRSxFQUFFLDZCQUFhLENBQUMsQ0FBQztJQUV6RixNQUFNLGlCQUFpQixHQUFHLGFBQWEsQ0FBQztJQUN4QyxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsaUJBQWlCLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSw2QkFBbUIsRUFBRSxFQUFFLGdDQUFVLENBQUMsQ0FBQztBQUcxRixDQUFDLENBQUM7QUEvQlcsUUFBQSxVQUFVLGNBK0JyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgZXZlbnRvRGVsZXRlLFxuICAgIGV2ZW50b0dldCxcbiAgICBldmVudG9Qb3N0LFxuICAgIGV2ZW50b1BhdGNoLFxuICAgIGV2ZW50b0x1Z2FyQ2VyY2FubyxcbiAgICBldmVudG9DZXJjYW5vLFxuICAgIHRvdGFsQXNpc3RlbnRlcywgc3ViaXJFdmVudG8sIGVzdGFkb1N1YmlyRXZlbnRvXG59IGZyb20gJy4vRXZlbnRvUm91dGVyJztcbmltcG9ydCB7RmFzdGlmeUluc3RhbmNlfSBmcm9tICdmYXN0aWZ5JztcbmltcG9ydCB7XG4gICAgYXV0ZW50aWNhY2lvblNjaGVtYSxcbiAgICBjcmVhdGVBc2lzdGVudGVTY2hlbWEsXG4gICAgY3JlYXRlRXZlbnRvU2NoZW1hLFxuICAgIGNyZWF0ZVJlc2VydmFTY2hlbWEsXG4gICAgZGVsZXRlQXNpc3RlbnRlU2NoZW1hLFxuICAgIGRlbGV0ZUV2ZW50b1NjaGVtYSxcbiAgICBkZWxldGVSZXNlcnZhU2NoZW1hLFxuICAgIGV2ZW50b0FzaXN0ZXRlc0dldFNjaGVtYSxcbiAgICBldmVudG9DZXJjYW5vc0dldFNjaGVtYSxcbiAgICBldmVudG9HZXRTY2hlbWEsXG4gICAgZXZlbnRvTHVnYXJlc0dldFNjaGVtYSxcbiAgICBnZXRBc2lzdGVudGVQb3JJZGVudGlmaWNhY2lvblNjaGVtYSxcbiAgICBnZXRQcm9jZXNzU3RhdHVzU2NoZW1hLFxuICAgIGdldFJlc2VydmFTY2hlbWEsXG4gICAgcGF0aEV2ZW50b1NjaGVtYSxcbiAgICB1cGRhdGVBc2lzdGVudGVTY2hlbWEsXG4gICAgdXBkYXRlUmVzZXJ2YVNjaGVtYSxcbiAgICB1cGxvYWRFeGNlbFNjaGVtYVxufSBmcm9tIFwiQGluZnJhc3RydWN0dXJlL2FwaS9zd2FnZ2VyXCI7XG5pbXBvcnQge1xuICAgIGFzaXN0ZW50ZURlbGV0ZSxcbiAgICBhc2lzdGVudGVHZXQsXG4gICAgYXNpc3RlbnRlUGF0Y2gsXG4gICAgYXNpc3RlbnRlUG9zdFxufSBmcm9tIFwiQGluZnJhc3RydWN0dXJlL2FwaS9yb3V0ZXJzL0FzaXN0ZW50ZVJvdXRlclwiO1xuaW1wb3J0IHtyZXNlcnZhRGVsZXRlLCByZXNlcnZhR2V0LCByZXNlcnZhUGF0Y2gsIHJlc2VydmFQb3N0fSBmcm9tIFwiQGluZnJhc3RydWN0dXJlL2FwaS9yb3V0ZXJzL1Jlc2VydmFSb3V0ZXJcIjtcbmltcG9ydCB7YXV0ZW50aWNhcn0gZnJvbSBcIkBpbmZyYXN0cnVjdHVyZS9hcGkvcm91dGVycy9BdXRlbnRpY2FjaW9uUm91dGVyXCI7XG5cbmV4cG9ydCBjb25zdCBpbml0Um91dGVzID0gYXN5bmMgKGFwcGxpY2F0aW9uOiBGYXN0aWZ5SW5zdGFuY2UpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBjb25zdCBwYXRoRXZlbnRvID0gJy9ldmVudG8nO1xuICAgIGFwcGxpY2F0aW9uLmdldChgJHtwYXRoRXZlbnRvfS86aWRgLCB7IHNjaGVtYTogZXZlbnRvR2V0U2NoZW1hIH0sIGV2ZW50b0dldCk7XG4gICAgYXBwbGljYXRpb24ucG9zdChgJHtwYXRoRXZlbnRvfWAsIHsgc2NoZW1hOiBjcmVhdGVFdmVudG9TY2hlbWEgfSwgZXZlbnRvUG9zdCk7XG4gICAgYXBwbGljYXRpb24ucGF0Y2goYCR7cGF0aEV2ZW50b31gLCB7IHNjaGVtYTogcGF0aEV2ZW50b1NjaGVtYSB9LCBldmVudG9QYXRjaCk7XG4gICAgYXBwbGljYXRpb24uZGVsZXRlKGAke3BhdGhFdmVudG99LzppZGAsIHsgc2NoZW1hOiBkZWxldGVFdmVudG9TY2hlbWEgfSwgZXZlbnRvRGVsZXRlKTtcbiAgICBhcHBsaWNhdGlvbi5nZXQoYCR7cGF0aEV2ZW50b30vbHVnYXJlc2AsIHsgc2NoZW1hOiBldmVudG9MdWdhcmVzR2V0U2NoZW1hIH0sIGV2ZW50b0x1Z2FyQ2VyY2Fubyk7XG4gICAgYXBwbGljYXRpb24uZ2V0KGAke3BhdGhFdmVudG99L2NlcmNhYCwgeyBzY2hlbWE6IGV2ZW50b0NlcmNhbm9zR2V0U2NoZW1hIH0sIGV2ZW50b0NlcmNhbm8pO1xuICAgIGFwcGxpY2F0aW9uLmdldChgJHtwYXRoRXZlbnRvfS86aWQvYXNpc3RlbnRlc2AsIHsgc2NoZW1hOiBldmVudG9Bc2lzdGV0ZXNHZXRTY2hlbWEgfSwgdG90YWxBc2lzdGVudGVzKTtcbiAgICBhcHBsaWNhdGlvbi5wb3N0KGAke3BhdGhFdmVudG99L3N1YmlyYCwgeyBzY2hlbWE6IHVwbG9hZEV4Y2VsU2NoZW1hIH0sc3ViaXJFdmVudG8pO1xuICAgIGFwcGxpY2F0aW9uLmdldChgJHtwYXRoRXZlbnRvfS9zdGF0dXMvOmpvYklkYCwge3NjaGVtYTogZ2V0UHJvY2Vzc1N0YXR1c1NjaGVtYX0sIGVzdGFkb1N1YmlyRXZlbnRvKTtcblxuXG4gICAgY29uc3QgcGF0aEFzaXN0ZW50ZSA9ICcvYXNpc3RlbnRlJztcblxuICAgIGFwcGxpY2F0aW9uLmdldChgJHtwYXRoQXNpc3RlbnRlfS86aWRlbnRpZmljYWNpb25gLCB7IHNjaGVtYTogZ2V0QXNpc3RlbnRlUG9ySWRlbnRpZmljYWNpb25TY2hlbWEgfSwgYXNpc3RlbnRlR2V0KTtcbiAgICBhcHBsaWNhdGlvbi5wb3N0KGAke3BhdGhBc2lzdGVudGV9YCwgeyBzY2hlbWE6IGNyZWF0ZUFzaXN0ZW50ZVNjaGVtYSB9LCBhc2lzdGVudGVQb3N0KTtcbiAgICBhcHBsaWNhdGlvbi5wYXRjaChgJHtwYXRoQXNpc3RlbnRlfWAsIHsgc2NoZW1hOiB1cGRhdGVBc2lzdGVudGVTY2hlbWEgfSwgYXNpc3RlbnRlUGF0Y2gpO1xuICAgIGFwcGxpY2F0aW9uLmRlbGV0ZShgJHtwYXRoQXNpc3RlbnRlfS86aWRlbnRpZmljYWNpb25gLCB7IHNjaGVtYTogZGVsZXRlQXNpc3RlbnRlU2NoZW1hIH0sIGFzaXN0ZW50ZURlbGV0ZSk7XG5cbiAgICBjb25zdCBwYXRoUmVzZXJ2YSA9ICcvcmVzZXJ2YSc7XG5cbiAgICBhcHBsaWNhdGlvbi5nZXQoYCR7cGF0aFJlc2VydmF9LzppZGAsIHsgc2NoZW1hOiBnZXRSZXNlcnZhU2NoZW1hIH0sIHJlc2VydmFHZXQpO1xuICAgIGFwcGxpY2F0aW9uLnBvc3QoYCR7cGF0aFJlc2VydmF9YCwgeyBzY2hlbWE6IGNyZWF0ZVJlc2VydmFTY2hlbWEgfSwgcmVzZXJ2YVBvc3QpO1xuICAgIGFwcGxpY2F0aW9uLnBhdGNoKGAke3BhdGhSZXNlcnZhfWAsIHsgc2NoZW1hOiB1cGRhdGVSZXNlcnZhU2NoZW1hIH0sIHJlc2VydmFQYXRjaCk7XG4gICAgYXBwbGljYXRpb24uZGVsZXRlKGAke3BhdGhSZXNlcnZhfS86aWRgLCB7IHNjaGVtYTogZGVsZXRlUmVzZXJ2YVNjaGVtYSB9LCByZXNlcnZhRGVsZXRlKTtcblxuICAgIGNvbnN0IHBhdGhBdXRlbnRpY2FjaW9uID0gJy9hdXRlbnRpY2FyJztcbiAgICBhcHBsaWNhdGlvbi5wb3N0KGAke3BhdGhBdXRlbnRpY2FjaW9ufWAsIHsgc2NoZW1hOiBhdXRlbnRpY2FjaW9uU2NoZW1hIH0gLGF1dGVudGljYXIpO1xuICAgIC8vYXBwbGljYXRpb24ucG9zdChgJHtwYXRoQXV0ZW50aWNhY2lvbn0vY3JlYXJgLCB7IHNjaGVtYTogY3JlYXJVc3VhcmlvU2NoZW1hIH0sIGNyZWFyVXN1YXJpbyk7XG5cbn07XG4iXX0=