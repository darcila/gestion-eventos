"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventoAppService = void 0;
const inversify_1 = require("inversify");
require("reflect-metadata");
const response_1 = require("@domain/response");
const entities_1 = require("@domain/entities");
const _configuration_1 = require("@configuration");
const services_1 = require("@infrastructure/services");
const ReservaCacheInfraService_1 = require("@infrastructure/services/ReservaCacheInfraService");
let EventoAppService = class EventoAppService {
    constructor() {
        this.eventoInfraService = _configuration_1.DEPENDENCY_CONTAINER.get(services_1.EventoInfraService);
        this.mapInfraService = _configuration_1.DEPENDENCY_CONTAINER.get(services_1.MapInfraService);
        this.reservaCacheInfraService = _configuration_1.DEPENDENCY_CONTAINER.get(ReservaCacheInfraService_1.ReservaCacheInfraService);
    }
    async getEvento(id) {
        const result = await this.eventoInfraService.consultar(id);
        return response_1.Result.ok(result);
    }
    async postEvento(evento) {
        const eventoEntity = entities_1.EventoEntity.create(evento.nombre, evento.descripcion, evento.lugar, evento.ciudad, evento.fecha, evento.hora, evento.categoria, evento.capacidad, evento.valor);
        eventoEntity.id = await this.eventoInfraService.guardar(eventoEntity);
        return response_1.Result.ok(eventoEntity);
    }
    async patchEvento(evento) {
        this.prevalidarCamposEvento(evento);
        const eventoEntity = await this.eventoInfraService.actualizar(evento);
        return response_1.Result.ok(eventoEntity);
    }
    async deleteEvento(id) {
        const estado = await this.eventoInfraService.eliminar(id);
        if (estado) {
            return response_1.Result.ok({ mensaje: 'Evento eliminado', id });
        }
        return response_1.Result.ok({ mensaje: 'Evento no eliminado', id });
    }
    async listarLugaresCercanos(tipo, evento) {
        const eventoEntity = await this.eventoInfraService.consultar(evento);
        let lat;
        let lng;
        if (eventoEntity.ubicacion) {
            const ubicacion = eventoEntity.ubicacion;
            lat = ubicacion.x;
            lng = ubicacion.y;
        }
        else {
            throw new Error('Evento no tiene ubicaci√≥n');
        }
        const eventos = await this.mapInfraService.consultarLugaresCercanos(lat, lng, tipo);
        return response_1.Result.ok(eventos);
    }
    async listarEventosCercanos(direccion, distancia, ciudad) {
        const ubicacion = await this.mapInfraService.consultarUbicacion(direccion, ciudad);
        const eventos = await this.eventoInfraService.consultarEventosCercanos(ubicacion[0], ubicacion[1], distancia);
        return response_1.Result.ok(eventos);
    }
    async asistentesEvento(id) {
        const cache = await this.reservaCacheInfraService.getCacheAsistentesCount(id);
        if (cache) {
            return response_1.Result.ok(cache);
        }
        const asistentes = await this.eventoInfraService.consultarAsistentes(id);
        await this.reservaCacheInfraService.setCacheAasistentesCount(id, asistentes);
        return response_1.Result.ok(asistentes);
    }
    prevalidarCamposEvento(evento) {
        if (!evento.nombre && !evento.fecha && !evento.hora && !evento.capacidad && !evento.valor) {
            throw new Error('Debes enviar al menos un campo a actualizar');
        }
    }
};
exports.EventoAppService = EventoAppService;
exports.EventoAppService = EventoAppService = __decorate([
    (0, inversify_1.injectable)()
], EventoAppService);
//# sourceMappingURL=data:application/json;base64,